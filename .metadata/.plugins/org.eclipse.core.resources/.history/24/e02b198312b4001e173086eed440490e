package h_Chapter07;


//! 오버라이딩

// 1. 정의
// : 자식 클래스가 부모클래스에서 정의된 메서드를 자신의 상황에 맞게 재정의
// : 상속관계에 있는 클래스를 사이에서 사용

// 2. 특징
// - 메서드의 시그니처가 일치
// : 부모 클래스에서 정의된 메서드와 동일한 이름, 매개변수 구성을 가져야 함
// - 반환타입
// : 부모 클래스의 메서드 반환 타입과 같거나 자동 형변환이 가능한 것이여야 함
// - @Override(Annotation)
// : 오버라이딩된 메서드임을 명시적으로 표시

//! 오버라이딩의 구현 방법
// 1. 부모 클래스의 상속받은 메서드를 하위 클래스에서 다시 정의
// 2. 메서드의 이름, 반환 타입, 매개변수가 부모 클래스의 메서드와 동일하게 작성
//     : 자식 클래스의 특성에 맞는 구현부를 재정의
// 3. @Oveeride 이노테이션을 메서드 위에 작성 (@Override 뒤에 ctrl + 스페이스)

class Animal2 {
	void sound() {
		System.out.println("동물이 소리를 냅니다.");
	}
}

class Dog2 extends Animal2 {
	// 오버라이딩 어노테이션
	// : 코드에 메타데이터를 제공하는 방법
	// @Override
	// : 현재 메서드가 부모 클래스의 메서드를 오버라이딩한다는 것을 명시
	@Override
	void sound() {
		System.out.println("개가 멍멍하고 짖습니다.");
	}
}



public class Overriding {

	public static void main(String[] args) {


	}

}
