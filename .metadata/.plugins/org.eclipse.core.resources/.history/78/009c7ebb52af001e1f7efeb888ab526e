package e_Chapter04;

// 객체 지향 프로그래밍
// OOP(Object-Oriented Programming)

// 객체란?
// : 데이터(속성)와 해당 데이터를 처리하는 방법(메소드)을 포함하는 프로그래밍의 기본 단위

// ex) 커피 자판기의 속성(데이터)
// - 커피의 종류
// - 가격
// - 현재 재고
// - 물의 온도

// 커피 자판기의 기능(메소드)
// - 커피 제조
// - 재고 관리
// - 가격 설정

// 객체 지향 프로그래밍의 예시
// ex) 학교 관리 시스템 구축

// 학생 객체
// : 학생의 이름, 학번, 수강 과목 등의 데이터
// : 성적 조회, 수강 신청 등의 메소드


// 교수 객체
// : 교수의 이름, 연구 분야, 담당 과목 등의 데이터
// : 강의 계획서, 성적 입력 등의 메소드

// 수업 객체
// : 과목명, 강의 시간, 강의실 등의 데이터
// : 강의 자료 업로드, 츨석 체크 등의 메소드

public class Object01 {

	public static void main(String[] args) {
		// 객체 지향 프로그래밍의 주요 개념
		
		// 1. 클래스(Class)
		// : 객체를 생성하기 위한 템플릿, 데이터(속성), 메소드(행동)을 정의
		// ex) '자동차' 클래스 
		//		- 속성(색상, 브랜드, 모델 등)
		//		- 메소드(주행, 정지, 속도 변경 등		
		
		// 2. 객체(Object)
		// : 클래스의 인스턴스, 실제로 메모리에 할당되어 동작하는 구체적이 엔티티
		// ex) '자동차' 클래스를 기반으로 만들어진 실제 자동차
		//		볼보 xc60 흰색 자동차 > 클래스를 토대로 실제로 사용할 수 있는 객체를 만듬
		

	}

}
